#!/bin/sh

set -eu

MANIFEST_SOURCE="${MANIFEST_SOURCE:-https://raw.githubusercontent.com/docker-library/official-images/master/library/${BASE_REPO}}"
IMAGE_CUSTOMIZATIONS=${IMAGE_CUSTOMIZATIONS:-}

NEW_ORG=${NEW_ORG:-circleci}
BASE_REPO_BASE=$(echo $BASE_REPO | cut -d/ -f2)
NEW_REPO=${NEW_REPO:-${NEW_ORG}/${BASE_REPO_BASE}}

INCLUDE_ALPINE=${INCLUDE_ALPINE:-false}

TAG_FILTER="${TAG_FILTER:-cat}"
TAG_INCLUDE_FILTER="${TAG_INCLUDE_FILTER:-cat}"

CIRCLE_NODE_TOTAL=${CIRCLE_NODE_TOTAL:-1}
CIRCLE_NODE_INDEX=${CIRCLE_NODE_INDEX:-0}

function find_tags_and_aliases() {
  ALPINE_TAG="-e alpine"
  if [[ $INCLUDE_ALPINE == "true" ]]
  then
    ALPINE_TAG=""
  fi

  curl --silent --location --fail --retry 3 "$MANIFEST_SOURCE" \
    | grep Tags \
    | sed  's/^.*Tags: //g' \
    | grep -v $ALPINE_TAG -e 'slim' -e 'onbuild' -e windows -e nanoserver -e alpha -e beta -e preview -e sid -e wheezy -e jessie \
    | ${TAG_FILTER} \
    | ${TAG_INCLUDE_FILTER} \
    | sed 's/, /:/' \
    | sed 's/, /,/g' \
    | sort | awk "NR % ${CIRCLE_NODE_TOTAL} == ${CIRCLE_NODE_INDEX}"

}

SHARED_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

TEMPLATE=${TEMPLATE:-basic}
VARIANTS=${VARIANTS:-none}
if [[ ${VARIANTS[@]} = *"browsers"* ]]
  then VARIANTS=($(echo ${VARIANTS[@]} | sed -E 's/([^ ]*browsers)/\1 \1-legacy/g'))
fi

function find_template() {
  # find the right template - start with invoker path
  # then check this path
  template=$1
  PREFIX=$2

  if [ -e "$(dirname pwd)/resources/$PREFIX-${template}.template" ]
  then
    echo "$(dirname pwd)/resources/$PREFIX-${template}.template"
    exit 0
  fi

  if [ -e "${SHARED_DIR}/$PREFIX-${template}.template" ]
  then
    echo "${SHARED_DIR}/$PREFIX-${template}.template"
    exit 0
  fi

  exit 1
}

GENERATED_HEADER='###
### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED
###
'

function render_dockerfile_template() {
  TEMP=$(mktemp)
  printf "%s\n" "${IMAGE_CUSTOMIZATIONS}" > $TEMP

  TEMPLATE_PATH=$(find_template $1 Dockerfile)

  echo "$GENERATED_HEADER"

  cat $TEMPLATE_PATH | \
    sed "s|{{BASE_IMAGE}}|$BASE_IMAGE|g" | \
    sed "/# BEGIN IMAGE CUSTOMIZATIONS/ r $TEMP"

  rm $TEMP
}

function render_readme_template() {
  BASIC_TEMP_PATH=$(mktemp)
  BROWSERS_TEMP_PATH=$(mktemp)

  TEMPLATE_TYPE=basic

  echo "$GENERATED_HEADER"

  if [ -e images/latest/Dockerfile ]
  then
     grep -v -e '^###' -e '^{{' -e '^# BEGIN' -e '^# END BEGIN' images/latest/Dockerfile | \
      grep -v -e '^ *$' > $BASIC_TEMP_PATH
  fi

  if [ -e images/latest/browsers/Dockerfile ]
  then
    grep -v -e '^###' -e '^{{' -e '^# BEGIN' -e '^# END BEGIN' images/latest/browsers/Dockerfile | \
     grep -v -e '^ *$' > $BROWSERS_TEMP_PATH
  else
    TEMPLATE_TYPE=service
  fi

  TEMPLATE_PATH=$(find_template $TEMPLATE_TYPE README)

   sed "s|{{NAME}}|${NAME}|g" $TEMPLATE_PATH | \
    sed "s|{{BASE_IMAGE}}|$BASE_IMAGE|g" | \
    sed "s|{{BASE_REPO}}|$BASE_REPO|g" | \
    sed "/{{DOCKERFILE_BASIC_SAMPLE}}/ r ${BASIC_TEMP_PATH}" | \
    sed "/{{DOCKERFILE_BROWSERS_SAMPLE}}/ r ${BROWSERS_TEMP_PATH}" | \
    grep -v -e '^###' -e '^{{' -e '^# BEGIN' -e '^# END BEGIN'

  rm $BASIC_TEMP_PATH
  rm $BROWSERS_TEMP_PATH
}

rm -rf images
mkdir -p images

for tag_aliases in $(find_tags_and_aliases)
do
  tag=$(echo "$tag_aliases" | cut -d: -f1)

  aliases=""
  if $(echo "$tag_aliases" | grep -q :)
  then
    aliases=$(echo "$tag_aliases" | cut -d: -f2)
  fi

  echo Generating $(basename `pwd`) $tag Dockerfile

  mkdir -p images/$tag

  BASE_IMAGE=${BASE_REPO}:${tag}
  NEW_IMAGE=${NEW_REPO}:${tag}

  render_dockerfile_template $TEMPLATE > images/$tag/Dockerfile
  echo "${tag}" > images/$tag/TAG
  echo "${aliases}" > images/$tag/ALIASES

  # variants based on the basic image
  if [ ${VARIANTS} != "none" ]
  then
    for variant in ${VARIANTS[@]}
    do

      echo " + including $variant variant"
      BASE_IMAGE=${NEW_REPO}:${tag}
      NEW_IMAGE=${NEW_REPO}:${tag}-${variant}

      mkdir -p images/$tag/$variant
      render_dockerfile_template $variant > images/$tag/$variant/Dockerfile
      echo "${tag}-${variant}" > images/$tag/$variant/TAG
      if [[ "${aliases}" ]]
      then
          echo "${aliases}-$variant" | sed "s|,|-$variant,|g" > images/$tag/$variant/ALIASES
      else
          echo '' > images/$tag/$variant/ALIASES
      fi
    done
  fi
done

render_readme_template > images/README.md
